<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wbtkj.chat.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.wbtkj.chat.pojo.model.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="greeting" property="greeting" jdbcType="VARCHAR" />
    <result column="model" property="model" jdbcType="VARCHAR" />
    <result column="system" property="system" jdbcType="VARCHAR" />
    <result column="context_n" property="contextN" jdbcType="INTEGER" />
    <result column="max_tokens" property="maxTokens" jdbcType="INTEGER" />
    <result column="temperature" property="temperature" jdbcType="DOUBLE" />
    <result column="top_p" property="topP" jdbcType="DOUBLE" />
    <result column="frequency_penalty" property="frequencyPenalty" jdbcType="DOUBLE" />
    <result column="presence_penalty" property="presencePenalty" jdbcType="DOUBLE" />
    <result column="logit_bias" property="logitBias" jdbcType="VARCHAR" />
    <result column="stop" property="stop" jdbcType="VARCHAR" />
    <result column="is_market" property="isMarket" jdbcType="BIT" />
    <result column="market_type" property="marketType" jdbcType="INTEGER" />
    <result column="file_names" property="fileNames" jdbcType="ARRAY" typeHandler="com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler" />
    <result column="likes" property="likes" jdbcType="INTEGER" />
    <result column="hot" property="hot" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.fileNamesCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler} and #{criterion.secondValue,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.fileNamesCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler} and #{criterion.secondValue,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, avatar, nickname, greeting, model, "system", context_n, max_tokens, 
    temperature, top_p, frequency_penalty, presence_penalty, logit_bias, stop, is_market, 
    market_type, file_names, likes, hot, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wbtkj.chat.pojo.model.RoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.wbtkj.chat.pojo.model.RoleExample" >
    delete from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wbtkj.chat.pojo.model.Role" useGeneratedKeys="true" keyProperty="id" >
    insert into role (user_id, avatar, nickname, 
      greeting, model, "system", 
      context_n, max_tokens, temperature, 
      top_p, frequency_penalty, presence_penalty, 
      logit_bias, stop, is_market, 
      market_type, file_names, 
      likes, hot, create_time, 
      update_time)
    values (#{userId,jdbcType=BIGINT}, #{avatar,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{greeting,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, #{system,jdbcType=VARCHAR}, 
      #{contextN,jdbcType=INTEGER}, #{maxTokens,jdbcType=INTEGER}, #{temperature,jdbcType=DOUBLE}, 
      #{topP,jdbcType=DOUBLE}, #{frequencyPenalty,jdbcType=DOUBLE}, #{presencePenalty,jdbcType=DOUBLE}, 
      #{logitBias,jdbcType=VARCHAR}, #{stop,jdbcType=VARCHAR}, #{isMarket,jdbcType=BIT}, 
      #{marketType,jdbcType=INTEGER}, #{fileNames,jdbcType=ARRAY,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler}, 
      #{likes,jdbcType=INTEGER}, #{hot,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.wbtkj.chat.pojo.model.Role" useGeneratedKeys="true" keyProperty="id" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="greeting != null" >
        greeting,
      </if>
      <if test="model != null" >
        model,
      </if>
      <if test="system != null" >
        "system",
      </if>
      <if test="contextN != null" >
        context_n,
      </if>
      <if test="maxTokens != null" >
        max_tokens,
      </if>
      <if test="temperature != null" >
        temperature,
      </if>
      <if test="topP != null" >
        top_p,
      </if>
      <if test="frequencyPenalty != null" >
        frequency_penalty,
      </if>
      <if test="presencePenalty != null" >
        presence_penalty,
      </if>
      <if test="logitBias != null" >
        logit_bias,
      </if>
      <if test="stop != null" >
        stop,
      </if>
      <if test="isMarket != null" >
        is_market,
      </if>
      <if test="marketType != null" >
        market_type,
      </if>
      <if test="fileNames != null" >
        file_names,
      </if>
      <if test="likes != null" >
        likes,
      </if>
      <if test="hot != null" >
        hot,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="greeting != null" >
        #{greeting,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="system != null" >
        #{system,jdbcType=VARCHAR},
      </if>
      <if test="contextN != null" >
        #{contextN,jdbcType=INTEGER},
      </if>
      <if test="maxTokens != null" >
        #{maxTokens,jdbcType=INTEGER},
      </if>
      <if test="temperature != null" >
        #{temperature,jdbcType=DOUBLE},
      </if>
      <if test="topP != null" >
        #{topP,jdbcType=DOUBLE},
      </if>
      <if test="frequencyPenalty != null" >
        #{frequencyPenalty,jdbcType=DOUBLE},
      </if>
      <if test="presencePenalty != null" >
        #{presencePenalty,jdbcType=DOUBLE},
      </if>
      <if test="logitBias != null" >
        #{logitBias,jdbcType=VARCHAR},
      </if>
      <if test="stop != null" >
        #{stop,jdbcType=VARCHAR},
      </if>
      <if test="isMarket != null" >
        #{isMarket,jdbcType=BIT},
      </if>
      <if test="marketType != null" >
        #{marketType,jdbcType=INTEGER},
      </if>
      <if test="fileNames != null" >
        #{fileNames,jdbcType=ARRAY,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler},
      </if>
      <if test="likes != null" >
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="hot != null" >
        #{hot,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wbtkj.chat.pojo.model.RoleExample" resultType="java.lang.Integer" >
    select count(*) from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update role
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.greeting != null" >
        greeting = #{record.greeting,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null" >
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.system != null" >
        "system" = #{record.system,jdbcType=VARCHAR},
      </if>
      <if test="record.contextN != null" >
        context_n = #{record.contextN,jdbcType=INTEGER},
      </if>
      <if test="record.maxTokens != null" >
        max_tokens = #{record.maxTokens,jdbcType=INTEGER},
      </if>
      <if test="record.temperature != null" >
        temperature = #{record.temperature,jdbcType=DOUBLE},
      </if>
      <if test="record.topP != null" >
        top_p = #{record.topP,jdbcType=DOUBLE},
      </if>
      <if test="record.frequencyPenalty != null" >
        frequency_penalty = #{record.frequencyPenalty,jdbcType=DOUBLE},
      </if>
      <if test="record.presencePenalty != null" >
        presence_penalty = #{record.presencePenalty,jdbcType=DOUBLE},
      </if>
      <if test="record.logitBias != null" >
        logit_bias = #{record.logitBias,jdbcType=VARCHAR},
      </if>
      <if test="record.stop != null" >
        stop = #{record.stop,jdbcType=VARCHAR},
      </if>
      <if test="record.isMarket != null" >
        is_market = #{record.isMarket,jdbcType=BIT},
      </if>
      <if test="record.marketType != null" >
        market_type = #{record.marketType,jdbcType=INTEGER},
      </if>
      <if test="record.fileNames != null" >
        file_names = #{record.fileNames,jdbcType=ARRAY,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler},
      </if>
      <if test="record.likes != null" >
        likes = #{record.likes,jdbcType=INTEGER},
      </if>
      <if test="record.hot != null" >
        hot = #{record.hot,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update role
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      greeting = #{record.greeting,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      "system" = #{record.system,jdbcType=VARCHAR},
      context_n = #{record.contextN,jdbcType=INTEGER},
      max_tokens = #{record.maxTokens,jdbcType=INTEGER},
      temperature = #{record.temperature,jdbcType=DOUBLE},
      top_p = #{record.topP,jdbcType=DOUBLE},
      frequency_penalty = #{record.frequencyPenalty,jdbcType=DOUBLE},
      presence_penalty = #{record.presencePenalty,jdbcType=DOUBLE},
      logit_bias = #{record.logitBias,jdbcType=VARCHAR},
      stop = #{record.stop,jdbcType=VARCHAR},
      is_market = #{record.isMarket,jdbcType=BIT},
      market_type = #{record.marketType,jdbcType=INTEGER},
      file_names = #{record.fileNames,jdbcType=ARRAY,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler},
      likes = #{record.likes,jdbcType=INTEGER},
      hot = #{record.hot,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wbtkj.chat.pojo.model.Role" >
    update role
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="greeting != null" >
        greeting = #{greeting,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="system != null" >
        "system" = #{system,jdbcType=VARCHAR},
      </if>
      <if test="contextN != null" >
        context_n = #{contextN,jdbcType=INTEGER},
      </if>
      <if test="maxTokens != null" >
        max_tokens = #{maxTokens,jdbcType=INTEGER},
      </if>
      <if test="temperature != null" >
        temperature = #{temperature,jdbcType=DOUBLE},
      </if>
      <if test="topP != null" >
        top_p = #{topP,jdbcType=DOUBLE},
      </if>
      <if test="frequencyPenalty != null" >
        frequency_penalty = #{frequencyPenalty,jdbcType=DOUBLE},
      </if>
      <if test="presencePenalty != null" >
        presence_penalty = #{presencePenalty,jdbcType=DOUBLE},
      </if>
      <if test="logitBias != null" >
        logit_bias = #{logitBias,jdbcType=VARCHAR},
      </if>
      <if test="stop != null" >
        stop = #{stop,jdbcType=VARCHAR},
      </if>
      <if test="isMarket != null" >
        is_market = #{isMarket,jdbcType=BIT},
      </if>
      <if test="marketType != null" >
        market_type = #{marketType,jdbcType=INTEGER},
      </if>
      <if test="fileNames != null" >
        file_names = #{fileNames,jdbcType=ARRAY,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler},
      </if>
      <if test="likes != null" >
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="hot != null" >
        hot = #{hot,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wbtkj.chat.pojo.model.Role" >
    update role
    set user_id = #{userId,jdbcType=BIGINT},
      avatar = #{avatar,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      greeting = #{greeting,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      "system" = #{system,jdbcType=VARCHAR},
      context_n = #{contextN,jdbcType=INTEGER},
      max_tokens = #{maxTokens,jdbcType=INTEGER},
      temperature = #{temperature,jdbcType=DOUBLE},
      top_p = #{topP,jdbcType=DOUBLE},
      frequency_penalty = #{frequencyPenalty,jdbcType=DOUBLE},
      presence_penalty = #{presencePenalty,jdbcType=DOUBLE},
      logit_bias = #{logitBias,jdbcType=VARCHAR},
      stop = #{stop,jdbcType=VARCHAR},
      is_market = #{isMarket,jdbcType=BIT},
      market_type = #{marketType,jdbcType=INTEGER},
      file_names = #{fileNames,jdbcType=ARRAY,typeHandler=com.wbtkj.chat.mapper.typeHandler.StringListTypeHandler},
      likes = #{likes,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.wbtkj.chat.pojo.model.RoleExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>