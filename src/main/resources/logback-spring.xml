<?xml version="1.0" encoding="UTF-8"?>
<configuration  scan="true" scanPeriod="10 seconds">

    <contextName>logback</contextName>

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

    <!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符-->
    <property name="LOG_PATTERN" value="%date{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n" />

    <springProperty scope="context" name="LOG_HOME" source="log.path"/>
    <springProperty scope="context" name="LOG_LEVEL" source="log.level"/>

    <!-- 控制台输出日志 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
<!--        &lt;!&ndash; 日志级别过滤INFO以下 &ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
<!--            <level>INFO</level>-->
<!--        </filter>-->
        <encoder>
            <!-- 按照上面配置的LOG_PATTERN来打印日志 -->
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!--每天生成一个日志文件，保存30天的日志文件。fileInfoLog用来切分文件的 -->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/info.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
            <!-- 日志文件的最大大小 -->
            <maxFileSize>2MB</maxFileSize>
            <!-- 超出删除老文件 -->
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
            <!-- 日志文件的最大大小 -->
            <maxFileSize>2MB</maxFileSize>
            <!-- 超出删除老文件 -->
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="asyncAppender" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="fileInfoLog" />
        <appender-ref ref="fileErrorLog" />
    </appender>

    <!-- project default level -->
<!--    <logger name="net.sh.rgface.serive" level="${LOG_LEVEL}" />-->
<!--    <logger name="com.wm.springbootjpa01" level="${LOG_LEVEL}"/>-->
<!--    <logger name="org.apache.ibatis" level="${LOG_LEVEL}"/>-->
<!--    <logger name="org.springframework" level="${LOG_LEVEL}"/>-->
<!--    <logger name="java.sql.Connection" level="${LOG_LEVEL}"/>-->
<!--    <logger name="java.sql.Statement" level="${LOG_LEVEL}"/>-->
<!--    <logger name="java.sql.PreparedStatement" level="${LOG_LEVEL}"/>-->
<!--    <logger name="org.mongodb.driver" level="info"/>-->

    <!--设置为OFF,即屏蔽; 留下sqltiming作为INFO级别输出-->
<!--    <logger name="jdbc.connection" level="OFF"/>-->
<!--    <logger name="jdbc.resultset" level="OFF"/>-->
<!--    <logger name="jdbc.resultsettable" level="OFF"/>-->
<!--    <logger name="jdbc.audit" level="OFF"/>-->
<!--    <logger name="jdbc.sqltiming" level="INFO"/>-->
<!--    <logger name="jdbc.sqlonly" level="OFF"/>-->
    <logger name="com.wbtkj.chat" level="${LOG_LEVEL}"/>
    <logger name="com.wbtkj.chat.mapper" level="info"/>

    <!-- 日志输出级别 -->
    <root level="info">
        <appender-ref ref="asyncAppender" />
        <appender-ref ref="console" />
    </root>
</configuration>